@use "sass:math";

$skyWidth: 1500px;
$skyHeight: 1000px;
$particleNum: 10;
$particleWrapNum: 3;
$particleDist: 300px;
$particlesRad: 20px;

body {
  width: 100vw;
  height: 100vh;
  min-height: $skyHeight;
  background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
  font-family: serif;
}

.particlesWrap {
  pointer-events: none;
  position: relative;

  .particles {
    position: absolute;
    width: $particlesRad;
    height: $particleDist;
    background-color: #00ff0a;
    opacity: 0;
    left: 800px;
    animation: particle01 0.7s ease-in-out infinite;
  }
}

.particlesWrap.single .particles {
  left: 50px;
}

.particlesWrap.singleRound .particles {
  left: 400px;
}

@for $j from 1 through ($particleWrapNum + 1) {
  .particlesWrap:nth-of-type(#{$j}) {
    @for $i from 1 through ($particleNum + 1) {
      .particles:nth-of-type(#{$i}) {
        transform: rotate(math.div($i * 360deg, $particleNum));
        animation-delay: $j * 0.1s;
      }
    }
  }
}

@keyframes particle01 {
  0% {
    clip-path: circle(5px at math.div($particlesRad, 2) math.div($particleDist, 2) - math.div($particlesRad, 2));
    filter: hue-rotate(0);
  }

  50% {
    clip-path: circle(10px at math.div($particlesRad, 2) math.div($particleDist, 2) - 50px);
  }

  95% {
    clip-path: circle(3px at math.div($particlesRad, 2) 10px);
    opacity: 1;
  }

  100% {
    clip-path: circle(1px at math.div($particlesRad, 2) math.div($particlesRad, 2));
    filter: hue-rotate(360deg);
    opacity: 0;
  }
}